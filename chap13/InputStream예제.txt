package ex1_inputstream;

import java.io.IOException;
import java.io.InputStream;

/*
 * 입출력 스트림 : 데이터의 이동통로. 단방향      추상클래스
 *  입력스트림 : 바이트 => 바이트형 입력스트림 : InputStream
 *                                       1byte 단위로 읽기.
 *                                       동영상, 이미지, 텍스트 등을 읽기
 *            문자   => 문자형 입력스트림   : Reader
 *                                       2byte(1char) 단위로 읽기
 *                                       텍스트데이터 읽기
 *  출력스트림 : 바이트 => 바이트형 출력스트림 : OutputStream
 *                                       1byte 단위로 쓰기
 *                                       동영상, 이미지, 텍스트 등을 쓰기
 *            문자   => 문자형 출력스트림   : Writer
 *                                       2byte(1char) 단위로 쓰기
 *                                       텍스트데이터 쓰기
 * InputStreamReader : 바이트형 입력스트림 -> 문자형입력스트림 변경. Reader 하위 클래스                                      
 * OutputStreamWriter : 바이트형 출력스트림 -> 문자형출력스트림 변경. Writer 하위 클래스                                      
 *            
 * 자바에서 제공되는 표준 입출력 스트림
 *   표준입력스트림 : InputStream System.in => 키보드에서 입력           
 *   표준출력스트림 : PrintStream System.out => 콘솔(화면)으로 출력
 *   표준오류스트림 : PrintStream System.err => 콘솔(화면)으로 출력. 빨강색 출력
 */
public class InputStreamEx1 {
	public static void main(String[] args) throws IOException {
		InputStream in = System.in;  //키보드 입력
		int data = 0;
		//in.read() : 1byte씩 읽기
		while((data=in.read()) != -1) //ctrl+z (EOF)
			System.out.print((char)data);
	}
}
package ex3_file;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

/*
 * FileInputStream : 파일의 내용을 읽어서 화면 출력하기
 * 
 * 주요메서드
 * int read() : 1바이트 읽어서 내용을 리턴
 * int read(byte[] buf) : buf의 크기만큼 읽어서 내용은 buf에 저장. 읽은 바이트수를 리턴
 * int read(byte[] buf,int start, int len) : 
 *                   len 크기만큼 읽어서 buf의 start 인덱스 부터 내용을 저장. 읽은 바이트수를 리턴
 * int available() : 읽기 가능 바이트 수 리턴                  
 */
public class FileInputStreamEx1 {
	public static void main(String[] args) throws IOException {
		FileInputStream fis = 
				  new FileInputStream("src/ex1_inputstream/InputStreamEx1.java");
		int data = 0;
		System.out.println("=========== read() 메서드를 이용하여 읽기");
		while((data=fis.read()) != -1) {
			System.out.print((char)data);
		}
		System.out.println("=========== read(byte[]) 메서드를 이용하여 읽기");
		fis = new FileInputStream("src/ex1_inputstream/InputStreamEx1.java");
		//fis.available() : 읽기 가능 바이트 수
		// 100바이트짜리 파일 을 읽지 않은 경우     fis.available():100 
		// 100바이트짜리 파일 중 1바이트를 읽은 경우 fis.available():99 
		byte[] buf = new byte[fis.available()];
		System.out.println("fis.available()=" + fis.available()); 
		//fis.read(buf) : fis 에서  buf 만큼 읽어서 읽은 내용은 buf저장. 실제 읽은 크기를 리턴.
		//        data  : 실제 읽은 바이트 수 
		while((data=fis.read(buf)) != -1) {
			//new String(buf,0,data) : buf의 0번인덱스 부터 data의 크기만큼을 문자열 객체로 생성
			System.out.print(new String(buf,0,data));
			System.out.println("data=" + data);
		}
		System.out.println("=========== read(byte[],int,int) 메서드를 이용하여 읽기");
		fis = new FileInputStream("src/ex1_inputstream/InputStreamEx1.java");
		buf = new byte[fis.available()+1];
		buf[0]='A';
		while((data=fis.read(buf,1,buf.length - 1)) != -1) {
			System.out.print(new String(buf,0,data));
		}
		fis.close();
	}
}package ex6_objectstream;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;

/*
 * ObjectOutputStream를 이용하여 객체를 저장한 object.ser 파일을 읽기
 */
public class ObjectInputStreamEx1 {
	public static void main(String[] args) throws IOException, ClassNotFoundException {
		//ois 스트림 : object.ser 파일에서 객체를 읽을 수 있는 스트림
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream("object.ser"));
//		Customer c1 = (Customer)ois.readObject(); //Customer 클래스로 형변환
//		Customer c2 = (Customer)ois.readObject();
		Object c1 = ois.readObject(); //readObject() 메서드의 리턴타입: Object임
		Object c2 = ois.readObject();
		System.out.println(c1.toString());
		System.out.println(c2.toString());
	}
}

package ex6_objectstream;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;

/*
 * object2.ser 파일에서 객체를 읽어서 화면 출력하기
 */
public class ObjectInputStreamEx2 {
	public static void main(String[] args) throws ClassNotFoundException, IOException {
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream("object2.ser"));
		User c1 = (User)ois.readObject();
		User c2 = (User)ois.readObject();
		System.out.println(c1.toString());
		System.out.println(c2.toString());

	}
}
